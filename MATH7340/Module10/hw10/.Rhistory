# problem 1
# (a)
library(ArrayExpress)
library(affy)
yeast.raw <-  ReadAffy(celfile.path= 'E:/yeast' )
eset <- expresso(yeast.raw,
bgcorrect.method="mas",
normalize.method="quantiles",
pmcorrect.method="pmonly",
summary.method="medianpolish")
# (b)
firstFive <- exprs(eset)[1:5,]
means <- apply(firstFive, 1, mean)
means
# (c)
dim(eset)
# 10928 genes and 30 samples
# problem 2
# (a)
anno <- annotation(yeast.raw)
anno
# (b)
library(yeast2.db)
library(annotate)
go1769308 <- get("1769308_at", env = yeast2GO)
gonr <- getOntology(go1769308, "MF")
gonr
length(gonr)
# (c)
library("GO.db")
gP <- getGOParents(gonr)
pa <- sapply(gP, function(x) x$Parents)
length(unique(pa))
# (d)
gC <- getGOChildren(gonr)
ch <- sapply(gC, function(x) x$Children)
length(unique(unlist(ch)))
# problem 3
rm(list=ls())
# (a)
library("genefilter")
library("ALL")
data(ALL)
patientB2 <- factor(ALL$BT %in% c("B2"))
patientB3 <- factor(ALL$BT %in% c("B3"))
wilcox <- function(x) ( wilcox.test (x[patientB2 == TRUE], x[patientB3 == TRUE],
paired = F, exact = F)$p.value < 0.001 )
selwilcox <- genefilter(exprs(ALL), filterfun(wilcox))
welch <- function(x) ( t.test(x[patientB2 == TRUE], x[patientB3 == TRUE],
paired = F) $p.value < 0.001 )
selwelch <- genefilter(exprs(ALL), filterfun(welch))
# (b)
library(limma)
x <- apply(cbind(selwilcox, selwelch), 2, as.integer)
vc <- vennCounts(x, include = "both")
vennDiagram(vc)
# (c)
ALLwilcoxon <- ALL[selwilcox,]
nrow(exprs(ALLwilcoxon))
ALLboth <- ALL[selwilcox & selwelch,]
nrow(exprs(ALLboth))
# (d)
annotation(ALL)
library("GO.db")
library("annotate")
library("hgu95av2.db")
GOTerm2Tag <- function(term) {
GTL <- eapply(GOTERM, function(x) {grep(term, x@Term, value=TRUE)})
Gl <- sapply(GTL, length)
names(GTL[Gl>0])}
GOTerm2Tag("oncogene")
# (e)
tran <- hgu95av2GO2ALLPROBES$"GO:0090402"
inboth <- tran %in% row.names(exprs(ALLboth))
ALLtran <- ALLboth[tran[inboth],]
dim(ALLtran)
# no gene pass the filters in (a) are oncogenes.
# problem 4
rm(list=ls())
# (a)
library("limma")
library("ALL")
data(ALL)
allB <- ALL[, which(ALL$BT %in% c("B1", "B2", "B3"))]
# (b)
design.ma <- model.matrix(~0 + factor(allB$BT))
colnames(design.ma) <- c("B1", "B2", "B3")
fit <- lmFit(allB, design.ma)
fit <- eBayes(fit)
print( topTable(fit, coef=3, number=5, adjust.method="fdr"), digits=4)
# (c)
cont.ma <- makeContrasts(B1-B2,B2-B3, levels=factor(allB$BT))
fit1 <- contrasts.fit(fit, cont.ma)
fit1 <- eBayes(fit1)
dim(topTable(fit1, number=Inf, p.value=0.01, adjust.method="fdr"))
# 314 genes are differentially expressed
print( topTable(fit1, number=5, adjust.method="fdr"), digits=4)
